<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Macro to add a pan_tilt camera. -->
  <xacro:macro name="pan_tilt_camera_macro" params="namespace parent_link frame_rate
      horizontal_fov image_width image_height image_format min_distance
      max_distance noise_mean noise_stddev offset K1 K2 K3 T1 T2 *origin">
    <xacro:include filename="$(find drone_description)/urdf/materials.xacro" />

    <gazebo>
      <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
        <robotNamespace>${namespace}</robotNamespace>
        <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
        <legacyModeNS>true</legacyModeNS>
      </plugin>
    </gazebo>

    <link name="${namespace}/gimbal_base_link">
      <inertial>
        <mass value="0.02" />
        <origin xyz="0.0 -0.05 -${offset / 2.0}" rpy="0 0 0" />
        <inertia ixx="${0.02 / 12 * (3 * 0.005 * 0.005 + offset * offset)}" ixy="0" ixz="0" iyy="${0.02 / 12 * (3 * 0.005 * 0.005 + offset * offset)}" iyz="0" izz="${0.02 / 2 * 0.005 * 0.005}" />
      </inertial>
      <visual>
        <origin xyz="0.0 -0.05 -${offset / 2.0}" rpy="0 0 0" />
        <geometry>
          <cylinder radius="0.005" length="${offset}"/>
        </geometry>
        <material name="blue"/>
      </visual>
    </link>

    <link name="${namespace}/gimbal_pitch_link">
      <inertial>
        <mass value="0.024" />
        <origin xyz="-0.025 -0.025 0.0" rpy="0 ${pi/2} ${pi/4}" />
        <inertia ixx="${0.024 / 12 * (3 * 0.005 * 0.005 + 0.05*1.414*0.05*1.414)}" ixy="0" ixz="0" iyy="${0.024 / 12 * (3 * 0.005 * 0.005 + 0.05*1.414*0.05*1.414)}" iyz="0" izz="${0.024 / 2 * 0.005 * 0.005}" />
      </inertial>
      <visual>
        <origin xyz="-0.025 -0.025 0.0" rpy="0 ${pi/2} ${pi/4}" />
        <geometry>
          <cylinder radius="0.005" length="${0.05*1.414}"/>
        </geometry>
        <material name="green"/>
      </visual>
    </link>

    <link name="${namespace}/gimbal_roll_link">
      <inertial>
        <mass value="0.005" />
        <origin xyz="0.025 0 0" rpy="0 ${pi/2} 0" />
        <inertia ixx="${0.005 / 12 * (3 * 0.005 * 0.005 + 0.025 * 0.025)}" ixy="0" ixz="0" iyy="${0.005 / 12 * (3 * 0.005 * 0.005 + 0.025 * 0.025)}" iyz="0" izz="${0.005 / 2 * 0.005 * 0.005}" />
      </inertial>
      <visual>
        <origin xyz="0.025 0 0" rpy="0 ${pi/2} 0" />
        <geometry>
          <cylinder radius="0.005" length="0.025"/>
        </geometry>
        <material name="red"/>
      </visual>
    </link>

    <link name="${namespace}/camera_link">
      <inertial>
        <mass value="0.02" />
        <origin xyz="0 0 0" rpy="${-pi/2} ${-pi/2} ${-pi/2}" />
        <inertia ixx="${0.02 / 12 * (3 * 0.02 * 0.02 + 0.01 * 0.01)}" ixy="0" ixz="0" iyy="${0.02 / 12 * (3 * 0.02 * 0.02 + 0.01 * 0.01)}" iyz="0" izz="${0.02 / 2 * 0.02 * 0.02}" />
      </inertial>
      <visual>
        <origin xyz="0 0 0" rpy="${-pi/2} ${-pi/2} ${-pi/2}" />
        <geometry>
          <cylinder radius="0.01" length="0.005"/>
        </geometry>
        <material name="orange"/>
      </visual>
    </link>

    <!-- <link name="${namespace}/camera_optical_link">
    </link> -->

    <joint name="${namespace}/gimbal_base_joint" type="fixed">
      <xacro:insert_block name="origin" />
      <parent link="${parent_link}"/>
      <child link="${namespace}/gimbal_base_link"/>
    </joint>

    <joint name="${namespace}/gimbal_pitch_joint" type="revolute">
      <origin xyz="0.0 -0.05 -${offset}" rpy="${pi} 0.0 0.0"/>
      <parent link="${namespace}/gimbal_base_link"/>
      <child link="${namespace}/gimbal_pitch_link"/>
      <axis xyz="0.0 1.0 0.0"/>
      <limit lower="${-pi/4}" upper="${pi/4}" effort="0.2" velocity="6.0"/>
    </joint>

    <joint name="${namespace}/gimbal_roll_joint" type="revolute">
      <origin xyz="-0.05 -0.05 0.0" rpy="0.0 0.0 0.0"/>
      <parent link="${namespace}/gimbal_pitch_link"/>
      <child link="${namespace}/gimbal_roll_link"/>
      <axis xyz="1.0 0.0 0.0"/>
      <limit lower="${-pi/4}" upper="${pi/4}" effort="0.2" velocity="6.0"/>
    </joint>

    <joint name="${namespace}/camera_joint" type="fixed">
      <origin xyz="0.05 0.0 0.0" rpy="${pi/2} ${-pi/2} 0"/>
      <parent link="${namespace}/gimbal_roll_link"/>
      <child link="${namespace}/camera_link"/>
    </joint>

    <!-- <joint name="${namespace}/camera_optical_joint" type="fixed">
      <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}" />
      <parent link="${namespace}/camera_link" />
      <child link="${namespace}/camera_optical_link" />
    </joint> -->

    <transmission name="${namespace}/pitch_tran">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${namespace}/gimbal_pitch_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${namespace}/gimbal_pitch_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <transmission name="${namespace}/roll_tran">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${namespace}/gimbal_roll_joint">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      </joint>
      <actuator name="${namespace}/gimbal_roll_motor">
        <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <gazebo reference="${namespace}/gimbal_base_link">
      <material>Gazebo/Blue</material>
    </gazebo>

    <gazebo reference="${namespace}/gimbal_pitch_link">
      <material>Gazebo/Green</material>
    </gazebo>

    <gazebo reference="${namespace}/gimbal_roll_link">
      <material>Gazebo/Red</material>
    </gazebo>

    <gazebo reference="${namespace}/camera_link">
      <material>Gazebo/Orange</material>
    </gazebo>

    <gazebo reference="${namespace}/camera_link">
      <sensor type="camera" name="${namespace}_camera">
        <update_rate>${frame_rate}</update_rate>
        <camera name="head">
          <horizontal_fov>${horizontal_fov}</horizontal_fov>
          <image>
            <width>${image_width}</width>
            <height>${image_height}</height>
            <format>${image_format}</format>
          </image>
          <clip>
            <near>${min_distance}</near>
            <far>${max_distance}</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>${noise_mean}</mean>
            <stddev>${noise_stddev}</stddev>
          </noise>
        </camera>
        <plugin name="${namespace}_camera_controller" filename="libgazebo_ros_camera.so">
          <robotNamespace>${namespace}</robotNamespace>
          <alwaysOn>true</alwaysOn>
          <updateRate>${frame_rate}</updateRate>
          <cameraName>camera</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.0</hackBaseline>
          <distortionK1>${K1}</distortionK1>
          <distortionK2>${K2}</distortionK2>
          <distortionK3>${K3}</distortionK3>
          <distortionT1>${T1}</distortionT1>
          <distortionT2>${T2}</distortionT2>
        </plugin>
      </sensor>
    </gazebo>
  </xacro:macro>

</robot>

