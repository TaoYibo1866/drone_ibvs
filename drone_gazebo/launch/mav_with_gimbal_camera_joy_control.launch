<launch>
  <arg name="mav_name" default="firefly"/>
  <!-- ${namespace}/gimbal_camera_name in .gazebo file -->
  <arg name="gimbal_camera_name" default="pan_tilt_camera"/>
  <arg name="world_name" default="logo_box"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="paused" default="false"/>
  <arg name="gui" default="true"/>
  
  <include file="$(find drone_gazebo)/launch/world.launch">
    <arg name="world_name" value="$(arg world_name)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <group ns="$(arg mav_name)">
    <include file="$(find drone_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find drone_description)/urdf/mav_$(arg gimbal_camera_name).gazebo" />
      <arg name="x" value="0.0"/>
      <arg name="y" value="0.0"/>
      <arg name="z" value="5.0"/>
      <arg name="R" value="0.0"/>
      <arg name="P" value="0.0"/>
      <arg name="Y" value="0.0"/>
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg log_file)"/>
    </include>

    <node name="roll_pitch_yawrate_thrust_controller_node" pkg="rotors_control" type="roll_pitch_yawrate_thrust_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/roll_pitch_yawrate_thrust_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>

    <node name="velocity_controller" pkg="drone_control" type="velocity_controller_node.py" args="FRD" output="screen">
      <rosparam command="load" file="$(find drone_control)/config/velocity_controller_$(arg mav_name).yaml" />
    </node>

    <node name="gimbal_controller" pkg="drone_control" type="gimbal_controller_node.py" args="$(arg gimbal_camera_name)" output="screen" />
    
    <include file="$(find drone_control)/launch/$(arg gimbal_camera_name)_control.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="gimbal_camera_name" value="$(arg gimbal_camera_name)" />
    </include>

    <node name="camera_output" pkg="image_view" type="image_view" args="image:=/$(arg mav_name)/$(arg gimbal_camera_name)/camera_0/image_raw"/>
    <node name="joy_node" pkg="joy" type="joy_node"/>
    <node name="joy_control" pkg="drone_joy_interface" type="joy_control_node.py" output="screen"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

</launch>
